<?php
/**
 * Created by PhpStorm.
 * User: scham
 * Date: 10.01.2018
 * Time: 12:14
 */

namespace anu\behaviors;


use anu\base\Behavior;
use anu\db\Query;

class ContentBehavior extends Behavior
{
    // Static
    // =========================================================================

    /**
     * @var string[] List of supported field handles.
     */
    public static $fieldHandles = [

    ];
    // Properties
    // =========================================================================


    /**
     * @var array Additional custom field values we donâ€™t know about yet.
     */
    private $_customFieldValues = [];
    // Magic Property Methods
    // =========================================================================

    /**
     * @inheritdoc
     */
    public function __isset($name)
    {
        if (isset(self::$fieldHandles[$name])) {
            return true;
        }

        return parent::__isset($name);
    }

    /**
     * @inheritdoc
     */
    public function __get($name)
    {
        if (isset(self::$fieldHandles[$name])) {
            return $this->_customFieldValues[$name] ?? null;
        }

        return parent::__get($name);
    }

    /**
     * @inheritdoc
     */
    public function __set($name, $value)
    {
        if (isset(self::$fieldHandles[$name])) {
            $this->_customFieldValues[$name] = $value;

            return;
        }
        parent::__set($name, $value);
    }

    public function init()
    {
        if (empty(self::$fieldHandles)) {
            $handles = (new Query())->distinct(true)->from(['{{%fields}}'])->select(['handle'])->column();
            foreach ($handles as $handle) {
                self::$fieldHandles[$handle] = true;
            }
        }

        parent::init(); // TODO: Change the autogenerated stub
    }

    public function canGetProperty($name, $checkVars = true): bool
    {
        return method_exists($this, 'get' . $name) || $checkVars && array_key_exists($name, $this->_customFieldValues);
    }
}
