{% includeJsFile(assetUrl ~'/js/controller/fieldLayoutDesigner.js') %}

{% set groups = anu.getFields().getAllGroups() %}
{% set fieldLayout = entryType.getFieldLayout() %}
{% set json = anu.getTemplate().addAnuJsObject(fieldLayout, 'fieldLayout') %}

<script type="text/ng-template" id="/fieldLayoutTemplate.html">
    <div id="fieldLayout" class="col s12">
        <div class="row">

            <ul ui-sortable="sortableOptions"
                class="collection col-sm-2 droppable"
                ng-model="tab.fields"
                ng-repeat="tab in fieldLayout.tabs"
            >
                <li data-tab="0" class="list-group-item red lighten-2">{[{ tab.name }]}</li>
                <li ng-repeat="field in tab.fields"
                    ng-model="field"
                    data-field="{[{ field.id }]}"
                    class="collection-item"
                >

                    {[{ field.name }]}
                    <div class="right">
                        <div class="dropdown">
                            <i class="material-icons" data-toggle="dropdown" style="cursor: pointer">settings</i>
                            <ul class="dropdown-menu">
                                <li>
                                    <a ng-click="removeField(field, tab)" href="javascript:void(0);">{{ "Remove"|t }}</a>
                                </li>
                                <li>
                                    <a href="javascript:void(0);">{{ "Required"|t }}</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </li>
            </ul>
        </div>

        <div class="row">
            <a ng-click="addGroup();" href="javascript:void(0);"
               class="btn waves-effect waves-light red lighten-2">{{ "Add Group"|t }}</a>
        </div>

        <div class="row">
            <ul
                    ng-repeat="group in groups"
                    ng-show="group.fields.length > 0"
                    class="collection col-sm-2"
                    ui-sortable="sortableOptions"
                    ng-model="group.fields"
            >
                <li data-field="{[{ group.id }]}" class="collection-item red lighten-2">{[{ group.name }]}</li>
                <li ng-repeat="field in group.fields | orderBy:'name' | filter: notUsedFieldFilter"
                    ng-model="field"
                    data-field="{[{ field.id }]}"
                    class="collection-item"
                >

                    {[{ field.name }]}
                </li>
            </ul>
        </div>

    </div>
</script>